name: Build

on: [ push ]

concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write
  contents: read

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Run build
        run: pnpm build
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}


#  DeployApp:
#    runs-on: ubuntu-latest
#    environment: Production
#    needs: TestAndBuild
#    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
#    env:
#      NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ vars.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
#    steps:
#      - name: Git clone the repository
#        uses: actions/checkout@v3
#      - uses: pnpm/action-setup@v2
#        with:
#          version: latest
#      - uses: actions/cache@v3
#        name: Setup pnpm cache
#        with:
#          path: ${{ env.STORE_PATH }}
#          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-store-
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
#          aws-region: ap-southeast-1
#      - name: Installing dependencies
#        run: |
#          pnpm install
#      - name: Deploy app
#        run: |
#          pnpm sst deploy --stage prod
